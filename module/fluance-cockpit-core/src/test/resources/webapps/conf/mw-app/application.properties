#---------------- Datasource props --------------------------------------------------
spring.datasource.platform=postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://mojito.dev.fluance.net:45432/granulaoperate
spring.datasource.username=leech
spring.datasource.password=leech

spring.ehlogdataSource.platform=postgres
spring.ehlogdataSource.driverClassName=org.postgresql.Driver
spring.ehlogdataSource.url=jdbc:postgresql://mojito.dev.fluance.net:45432/ehlog
spring.ehlogdataSource.username=leech
spring.ehlogdataSource.password={cipher}AIBsyf4nR4oXlWsLsO3S1Bpsihr5mmsXTob9NcFGTUczpG4GzGYc87RDu4v4H2A23owznXHMlNyulmjKkBlzt1WjSAMwaW/7BUPjMcLErVy32v4sRYvZUBKRL39rL/VvOGAvshoLELD7UglfeWQf0vR7M+ws2kHg8AOCAH6thO+FabhhF7nbcIubx1rjZLDePg1SBfEPo0ehwMoQ3KWwG2WA
spring.ehlogdataSource.max-idle=8
spring.ehlogdataSource.min-idle=1
spring.ehlogdataSource.max-active=30
spring.ehlogdataSource.validation-query=SELECT 1
spring.ehlogdataSource.time-between-eviction-runs-millis=5000
spring.ehlogdataSource.min-evictable-idle-time-millis=60000

# The following should all trigger validation of (idle) connections
# and when an exception occurs or the idle period has passed
# the connections will be removed from the pool.
spring.datasource.max-active=30
# specify the number of initial connections
spring.datasource.initial-size=8
# specify the min and max number of idle connections
spring.datasource.max-idle=8
spring.datasource.min-idle=1
# To validate connection we need to specify a validation-query and when to validate.
# As we want to validate periodically,
# instead of when a connection is retrieved from the pool
# (this to prevent broken connections in our pool).
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1
# Now that we are also validating while a connection is idle,
# we need to specify how often we want to run this query
# for the connections and when a connection is considered idle.
# defaults to 5000
spring.datasource.time-between-eviction-runs-millis=5000
# defaults to 60000
spring.datasource.min-evictable-idle-time-millis=60000

# Hibernate specific settings
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=net.fluance.app.spring.data.support.orm.hibernate.dialect.JsonPostgreSQL9Dialect

#-------------------------------------- Default values -----------------------------------------------------------
net.fluance.cockpit.core.model.repository.defaultResultLimit = 50
net.fluance.cockpit.core.model.repository.defaultResultOffset = 0
net.fluance.cockpit.core.model.repository.defaultResultVisitListOrderBy=nb
net.fluance.cockpit.core.model.repository.defaultResultGuarantorListOrderBy=id
net.fluance.cockpit.core.model.repository.defaultResultGuarantorListSortOrder=asc
net.fluance.cockpit.core.model.repository.defaultResultPolicyListOrderBy=priority, subpriority
net.fluance.cockpit.core.model.repository.defaultResultPolicyListSortorder=asc
net.fluance.cockpit.core.model.repository.defaultResultInvoiceListOrderBy=invdt
net.fluance.cockpit.core.model.repository.defaultResultAppointmentListOrderBy=begindt
net.fluance.cockpit.core.model.repository.defaultResultAppointmentListSortOrder=asc
net.fluance.cockpit.core.model.repository.defaultResultPatientListOrderBy=patient_id
net.fluance.cockpit.core.model.repository.defaultResultPatientListSortOrder=asc
net.fluance.cockpit.core.model.repository.defaultResultPhysicianPatientListOrderBy=admitdt desc
net.fluance.cockpit.core.model.repository.defaultResultPatientListByUnitOrderBy=patientroom asc, lastname collate \"C\", firstname
net.fluance.cockpit.core.model.repository.defaultResultAccessLogListOrderBy=logdt
net.fluance.cockpit.core.model.repository.defaultResultAccessLogListSortOrder=desc
net.fluance.cockpit.core.model.repository.defaultResultBenefitListOrderBy=benefitdt
net.fluance.cockpit.core.model.repository.defaultResultBenefitListSortOrder=desc
net.fluance.cockpit.core.model.repository.defaultResultRadiologyReportListOrderBy=studydt
net.fluance.cockpit.core.model.repository.defaultResultRadiologyReportListSortOrder=desc
net.fluance.cockpit.core.model.repository.defaultResultNoteDetailsListOrderBy=referencedt
net.fluance.cockpit.core.model.repository.defaultResultNoteDetailsListSortOrder=desc
net.fluance.cockpit.core.model.repository.defaultHasPicturesValue=false
net.fluance.cockpit.core.model.repository.defaultResultServiceFeesFilterListOrderBy=date
net.fluance.cockpit.core.model.repository.defaultResultServiceFeesFilterListSortOrder=desc

#--User profile config
user-profile.service.url=https://mojito.dev.fluance.net:8443/ehprofile/profile/my

authorization.header = Authorization
spring.mvc.throw-exception-if-no-handler-found=true

oauth2.service.url.getUserInfos = mock
oauth2.service.url.AuthorizationHeader = mock
oauth2.service.token.url= /mock/mock
oauth2.service.client.authorization-type = mock
oauth2.service.client.id = mock
oauth2.service.client.secret =  mock
